<?xml version="1.0" encoding="utf-8" ?> 
	<CommunityServer>
		<!--


			defaultLanguage (default = en-US) :
				This is the default language your forums installation will use when Anonymous users	and guests first visit the
				homepage, and after they register.  Once registered, they may change their language preference from their user
				Control Panel.  To view a list of supported languages, open the following XML file:
					
					~/Languages/languages.xml

			forumFilesPath (default = "/") :
				This is the forums' complete pathname, in reference to the "Web Application's Home".  For example,
				if your Web Application is at "http://domain.com/Members/MyApp/", and you install the forums into
				a directory of "http://domain.com/Members/MyApp/Forums/", then you will need to change the forumsFilesPath
				to "/Forums/" below.  This is because the forumsFilesPath is in additional to the Web Application's path.

				If you used the install wizard, you will not need to change this setting.  As the install wizard automatically
				configured your local machine to have a new Web Application name, besides your root folder.  And since
				the forums was installed into the base directory of this new Web Application, you will leave it "/".  This
				is correct, even if your Web Application directory is actually "http://localhost/CommunityServer/", you
				will leave the setting for forumFilesPath="/".

			disableEmail (default = False) :
				Setting this to True will disable the Email processing on this server.  This is primarily used
				on clustered servers to allow only certain machines to process email.  Having all clustered web servers attempting
				to process the email queue could result in duplicate emails being sent on high-traffic websites.  This setting
				allows you to control which servers queue and send the emails in a load-balanced environment.
				
				This setting overrides the SiteSettings option for sending emails, if the sitesettings has emails set to True.
				Else, nothing changes and no web server sends email.

			disableIndexing (default = False) :
				Setting this to True will disable .NET indexing of cached data (language files, site settings, forums information, 
				etc).  Setting this to True will degrade the system and the forum's performance.
				
			disableThreading (default = False) :
				Setting this to True will disable .NET background threading of system processing (emails, stats, etc).  Setting
				this to True will degrade the system's and the forum performance.
			
			smtpServerConnectionLimit (default = -1)
				Limits or throttles the number of concurrent connections that can be sent to an SMTP server when sending email. Some ISP's
				limit the number of concurrent connections from a single account and if there is a large email queue we can quickly exhaust
				the number of connections to the ISP's SMTP server. In other situations you may not have this restriction and can just leave it
				at the default which will send the email as fast as it can and not worry about the number of connections used by a single
				account.
				
			enableLatestVersionCheck (default = true)
				Option to control whether the admin page attempts to contact the forums site to check for the latest version. Turn this option
				to false to turn this capability off.
				
			backwardsCompatiblePasswords (default = false)
			    Should CS attempt to upgrade an account after a failed login attempt. MemberRoles stored password hashes slightly differently from 
			    Forums 2.0. If set to backwardsCompatiblePasswords is set to true, after a failed login attempt, CS will attempt to upgrade the account. 
			    If you are working on a clean install of CS, you should leave this at false. 
			    
			 requireSSL (default = false)
			    This will cause the Login control validate if the request is over a secure connection (SSL). If not, the control 
			    will redirect the page to the same url over a secure connection. You must have a valid CERT for this to work.
	
			wwwStatus (default = Remove)
				Three supported values: Require, Remove, Ignore
				Require validates the current Url uses www. (ie, http://www.communityserver.org)
				Remove validates the current Url does not contain www.
				Ignore does not validate the request
		-->
		<Core 
			defaultLanguage="zh-CN" 
			filesPath="/" 
			disableEmail="false"
			disableIndexing="false" 
			disableThreading="false"
			cacheFactor="5"
			smtpServerConnectionLimit="-1"
			enableLatestVersionCheck="true"
			systemType = "Self"
			backwardsCompatiblePasswords = "true"
			textEditorType = "Openlab.FreeTextBoxWraper.FTB, Openlab.CSAddOns" 
			requireSSL = "false"
			defaultRoles = "Everyone;Registered Users" 
			wwwStatus = "Remove"
			AttachmentsPath = "~/Attachments/"
			AvatarsPath = "~/Avatars/Uploads/"
			AttachmentSaveMode = "Disk"
			AvatarSaveMode = "Disk"
		>

			<providers>

				<clear/>
				<!--
					SqlForumsProvider :
						Microsoft(r)'s SQL Server Data Provider Configuration Section

						To configure manually, replace the value for connectionString with
						your MSSQLSERVER's connect information.  

							For example, replace:
								connectionString = "-SqlConnectiongString-" 
							with:
								connectionString = "server=127.0.0.1;database=CommunityServer;uid=Username;pwd=Password"


						If installing into a shared web hosting company's database, you will most likely be installing from a
						non-DBO (DataBase Owner) account.  To ensure your database objects can be accessed properly from the forums,
						you may need to change the databaseOwner value below to your username/accoutname you have with your hosting company.

							For example, replace:
								databaseOwner = "dbo"
							with:
								databaseOwner = "Username"
				-->
				<add 
					name = "CommonDataProvider" 
					type = "CommunityServer.Data.SqlCommonDataProvider, CommunityServer.SqlDataProvider" 
					connectionStringName = "SiteSqlServer"	databaseOwnerStringName = "SiteSqlServerOwner"
				/>
				
				<add 
					name = "ForumDataProvider" 
					type = "CommunityServer.Data.ForumsSqlDataProvider, CommunityServer.SqlDataProvider" 
					connectionStringName = "SiteSqlServer"	databaseOwnerStringName = "SiteSqlServerOwner"
				/>				
				
				<add 
					name = "WeblogDataProvider" 
					type = "CommunityServer.Data.WeblogSqlDataProvider, CommunityServer.SqlDataProvider" 
					connectionStringName = "SiteSqlServer" databaseOwnerStringName = "SiteSqlServerOwner"
				/>				

				<add 
					name = "GalleryDataProvider" 
					type = "CommunityServer.Data.GallerySqlDataProvider, CommunityServer.SqlDataProvider" 
					connectionStringName = "SiteSqlServer" databaseOwnerStringName = "SiteSqlServerOwner"				
				/>
				
				<add 
					name = "GuestBookDataProvider" 
					type = "CommunityServer.Data.GuestBookSqlDataProvider, CommunityServer.SqlDataProvider" 
					connectionStringName = "SiteSqlServer" databaseOwnerStringName = "SiteSqlServerOwner"				
				/>
				
				<add 
					name = "ProviderHelper" 
					type = "CommunityServer.Data.WebSqlProviderHelper, CommunityServer.SqlDataProvider" 
					connectionStringName = "SiteSqlServer" databaseOwnerStringName = "SiteSqlServerOwner"
				/>
				
				<add 
				    name = "SiteUrlsDataProvider" 
				    type = "CommunityServer.Components.SiteUrlsData, CommunityServer.Components" 
				    path = "siteurls.config" 
				/>
			</providers>
			

			
			<appLocation>
                <!-- 
			    <add pattern = "blogs/admin" name="BlogAdmin" value = "weblog" />
			    <add pattern = "forums/admin" name="ForumAdmin" value = "forum" />
			    <add pattern = "galleries/admin" name="GalleryAdmin" value = "gallery" />
                -->

			    <add pattern = "/blogs" name="BlogPublic" type = "weblog" />
			    <add pattern = "/forums" name="Forums" type = "forum" />
			    <add pattern = "/photos" name="GalleryPublic" type = "gallery" />
			    <add pattern = "/guestbooks" name = "GuestBookPublic" type = "guestbook" />
			    <add pattern = "/admin" name = "Admin" type = "admin" />
			    <add pattern = "/installer" name = "Installer" type = "installer" />
			</appLocation>
			
			<extensionModules>
				<add name="PassportAuthentication"
					extensionType="Security"
					type="Telligent.CommunityServer.Security.PassportAuthentication, Telligent.CommunityServer.SecurityModules"
				/>

				<!--
				allowAutoUserRegistration (default = true)
					This option controls whether the forums will support auto registration of users in the system. This is useful if the
					forums are being used with Windows authentication, Passport authentication or in an integrated hosting invironment 
					such DotNetNuke or some other parent site where the parent site provides the user validation. This will simply create 
					a user profile for this authenticated user.
				
				adminWindowsGroup (default = Administrators)
					Members of this group will be mapped to the Administrative role.
				
				adminWindowsGroupIsSystemAdministrator (default = true)
					Controls whether members of the built in group Administrators are automatically treated as administrators in the application.
				-->				

				<add name="WindowsAuthentication"
					extensionType="Security"
					type="Telligent.CommunityServer.Security.WindowsAuthentication, Telligent.CommunityServer.SecurityModules"
					allowAutoUserRegistration="true"
					adminWindowsGroup="Administrators"
					adminWindowsGroupIsSystemAdministrator="true"
				/>
				
				<!--
				allowAutoUserRegistration (default = true)
					This option controls whether the forums will support auto registration of users in the system. This is useful if the
					forums are being used with Windows authentication, Passport authentication or in an integrated hosting invironment 
					such DotNetNuke or some other parent site where the parent site provides the user validation. This will simply create 
					a user profile for this authenticated user.
				
				userEmailAddressCookie (default = CSUserEmailAddress)
					This option is the name of a cookie that should contain the user's email address.  When creating a new user,
					it is necessary to specify an email address for them.  By storing the email address in a cookie when the user
					is logged in, Community Server can read it and use it when creating the user.
				
				useEncryptedEmailAddressCookie (default = false)
					This option specifies whether the cookie used store the user's email address is encrypted using
					FormsAuthentication.Encrypt().
				-->
				<add name="FormsAuthentication"
					extensionType="Security"
					type="Telligent.CommunityServer.Security.FormsAuthentication, Telligent.CommunityServer.SecurityModules"
					allowAutoUserRegistration="true"
					userEmailAddressCookie="CSUserEmailAddress"
					useEncryptedEmailAddressCookie="false"
				/>
			</extensionModules>
		</Core>
		<!--
		The MarkUp section lists Html and Attribtes which users are allowed to enter when creating new posts. Any 
		element or attribute not included in this list will either be removed or encoded (ie, they will NOT be rendered as markup).
		
		Elements in the globalAttributes section with enable = true will be allowed for all valid Html elements. Invalid attributes
		always removed!
		
		Elements listed in the html section will be treated as valid. If you would like to enable additional attributes,
		you can list them with a value of true		
		-->
		<MarkUp>
			<globalAttributes>
				<class enable = "true" />
				<align enable = "true" />
				<id enable = "true" />
			</globalAttributes>
			<html>
				<h1 />
				<h2 />
				<h3 />
				<h4 />
				<h5 />
				<h6 />
				<h7 />
				<strong />
				<em />
				<u />
				<b />
				<i />
				<strike />
				<sub />
				<sup />
				<font size = "true" color = "true" face = "true" />
				<blockquote dir = "true" />
				<ul />
				<ol />
				<li />
				<p dir = "true" />
				<address />
				<div />
				<hr />
				<br />
				<a href = "true" title = "true" name = "true" target= "true" />
				<span />
				<img src = "true" alt = "true" title = "true" border = "true" width = "true" height = "true" />
				<table cellpadding = "true" cellspacing = "true" bgcolor = "true" />
				<th />
				<td rowspan = "true" colspan = "true" />
				<tr />
				<pre />
				<code />
				<xmp />
			</html>
		</MarkUp>

		<!--
		
		Gallery Configuration

			enableFileSystemStorage (default = False)
				This enables the application to write images that are uploaded to the filesystem rather than to the database.
				This helps to keep the size of the database smaller when using Gallery.  If this is enabled, ensure that the
				setting for fileSystemStorageLocation is properly configured.
			
			fileSystemStorageLocation (default = "~/photos/storage")
				This is the folder that Gallery will store images in when enableFileSystemStorage is enabled.  This setting
				can be in multiple forms:
					- Relative to the Web Server
						The folder can be configured relative to the structure of the web folder.  Having the path begin with
						a tilde (~) makes it so the path is relative to where the application is installed.  If Community Server
						is installed to "/CS/" and the setting is "~/photos/storage", it will be mapped to the physical location
						of wherever "/CS/photos/storage" maps to.
						
						Additionally, the folder can be relative to the web root or another virtual directory by using something
						like "/path/to/folder".
					- Relative to Drive
						The folder can be configured with a full path in the form of "C:\path\to\folder" to store files outside
						of the web space.
					- Relative to a UNC Share
						The folder can be setup to access files stored on another machine on the network by using a setting like
						"\\machine\share" or "\\machine\share\path\to\folder".
				
				With all methods, you need to ensure that the ASP.NET process has access to write to the folder.  On Windows XP or
				2000 based machines, the ASPNET user needs write permission.  On Windows Server 2003, the Network Service account
				needs write permission.
				
				When using UNC shares, special care must be taken to setup permissions.  If you are using a Windows Server 2003 and
				have an Active Directory domain, you can grant the Network Service account write permissions to the share and to the
				folder.  If you're using Windows XP or 2000, or you're not using a domain, you can configure impersonation to have
				the application run as another use.  In the web.config, under the <system.web> section, add and configure the following:
				
					<identity impersonate="true" userName="useraccount" password="password" />
				
				For more security, the username and password may be stored in the system registry.  For details on how to configure this,
				see the "Hosting Applications on UNC Shares" under the "UNC Shares" section at:
					http://msdn.microsoft.com/library/default.asp?url=/library/en-us/secmod/html/secmod92.asp
				
				Another option would be to configure a virtual directory in IIS that points to a UNC share and contains all of the
				credentials.  In this way, you would use the "Relative to Web Server" type of folder location.
		
		-->

		<Gallery
			enableFileSystemStorage="true"
			fileSystemStorageLocation="~/photos/storage"
		/>

		
		<!--
		
		Weblog Configuration
		
			postedbyDisplay (default = Weblog)
				Controls whether the "by xxxxxx" text is displayed, and if so what to display, on posts in the blog aggregate lists.
				Must be one of 3 values: "Weblog", "UserName", or "Off"
				
		-->

		<Weblog 
			defaultTheme = "default" enableSkinCache = "true" postedbyDisplay = "Weblog" enableThemes = "true"
			aggregatePostSize = "250" createDirectories = "true"
			servicePostCountLimit = "25" aggregatePostCount = "25" individualPostCount = "15" />
		
		
		<!-- 
		    Changes made to the Jobs list will not be reflected until an applicatin restart. The easiest way to restart
		    the application is to open the web.config file and save it (no changes needed)
		    
		    On the Jobs element, if singleThread = true (default), all jobs will be executed on a single thread and their individual minute attributes will not be honored. 
		    This behavior can be override by individual jobs by adding a singleThread = false (default value is true) attribute to the job element.		    
		    
		    The default minute interval for all jobs is 15 minutes
		-->
	    <Jobs minutes = "5" singleThread = "false">
			<!-- <job name = "SiteStatisticsUpdates" type = "CommunityServer.Components.SiteStatisticsJob, CommunityServer.Components" enabled = "true" enableShutDown = "false" /> -->
		<!--<job name = "ForumsIndexing" type = "CommunityServer.Discussions.Components.ForumsSearchJob, CommunityServer.Discussions" enabled = "false" enableShutDown = "false" /> -->
		<!-- <job name = "WeblogIndexing" type = "CommunityServer.Blogs.Components.WeblogSearchJob, CommunityServer.Blogs" enabled = "false" enableShutDown = "false" /> -->
		<!-- <job name = "GalleryIndexing" type = "CommunityServer.Galleries.Components.GallerySearchJob, CommunityServer.Galleries" enabled = "false" enableShutDown = "false" /> -->

		<!-- <job name = "AnonymousUsers" minutes = "1" type = "CommunityServer.Components.AnonymousUserJob, CommunityServer.Components" enabled = "true" enableShutDown = "false" /> -->
		<!-- <job singleThread = "false" minutes = "5" name = "Emails" type = "CommunityServer.Components.EmailJob, CommunityServer.Components" enabled = "true" enableShutDown = "false" failureInterval = "1" numberOfTries = "10" /> -->
		<!-- <job name = "Referrals" type = "CommunityServer.Components.ReferralsJob, CommunityServer.Components" enabled = "true" enableShutDown = "false" /> -->
		<!-- <job name = "Views" type = "CommunityServer.Components.ViewsJob, CommunityServer.Components" enabled = "true" enableShutDown = "false" /> -->
		<!-- <job name = "RecentBlogContent" type = "CommunityServer.Blogs.Components.RecentContentJob, CommunityServer.Blogs" enabled = "true" enableShutDown = "false" /> -->
		<!-- <job name = "RebuildThumbnailsJob" type = "CommunityServer.Galleries.Components.RebuildThumbnailsJob, CommunityServer.Galleries" picturesPerRun = "25" enabled = "true" enableShutDown = "false" /> -->
		</Jobs>
		
		<CSModules>
			<!-- <add name = "CSMembershipRulesModule" type = "CommunityServer.Components.CSMembershipRulesModule, CommunityServer.Components" /> -->
		<!-- <add name = "CSCatastrophicExceptionModule" type = "CommunityServer.Components.CSCatastrophicExceptionModule, CommunityServer.Components" /> -->
		<add name = "CSExceptionModule" type = "GPRP.GPRPComponents.CSExceptionModule, GPRPComponents" />



		<!-- <add name = "IrcCommands" type = "CommunityServer.Discussions.Components.IrcCommandsModule, CommunityServer.Discussions" /> -->
		<!-- <add name = "ForumCensorship" type = "CommunityServer.Discussions.Components.CensorshipModule, CommunityServer.Discussions" /> -->
		<!-- <add name = "ForumEmoticon" type = "CommunityServer.Discussions.Components.EmoticonModule, CommunityServer.Discussions" /> -->
		<!-- <add name = "ForumSourceCode" type = "CommunityServer.Discussions.Components.SourceCodeModule, CommunityServer.Discussions" /> -->
		<!-- <add name = "ForumHtmlScrubbing" type = "CommunityServer.Discussions.Components.HtmlScrubbingModule, CommunityServer.Discussions" /> -->
		<!-- <add name = "BBcodeToHtml" type = "CommunityServer.Discussions.Components.BBcodeToHtmlModule, CommunityServer.Discussions" /> -->
		<!-- <add name = "ForumPlainText" type = "CommunityServer.Discussions.Components.PlainTextModule, CommunityServer.Discussions" /> -->

		<!-- <add name = "WeblogCensorModule" type = "CommunityServer.Blogs.Components.CensorModule, CommunityServer.Blogs" /> -->
<!-- <add name = "WeblogPostandArticleHtmlScrubbing" type = "CommunityServer.Blogs.Components.PostandArticleHtmlScrubbing, CommunityServer.Blogs" /> -->
<!-- <add name = "WeblogFeedbackHtmlFormatting" type = "CommunityServer.Blogs.Components.FeedbackHtmlFormatting, CommunityServer.Blogs" /> -->
<!-- <add name = "TrackbackModule" type = "CommunityServer.Blogs.Components.TrackbackModule, CommunityServer.Blogs" /> -->
<!-- <add name = "XmlRpcPingModule" type = "CommunityServer.Blogs.Components.XmlRpcPingModule, CommunityServer.Blogs" /> -->
<!-- <add name = "WeblogFormattingModule" type = "CommunityServer.Blogs.Components.WeblogFormattingModule, CommunityServer.Blogs" /> -->

<!-- <add name = "PictureCensor" type = "CommunityServer.Galleries.Components.CensorPictureModule, CommunityServer.Galleries" /> -->
			<!-- <add name = "PictureHtmlScrubber" type = "CommunityServer.Galleries.Components.HtmlScrubberModule, CommunityServer.Galleries" /> -->
<!-- <add name = "PictureComments" type = "CommunityServer.Galleries.Components.CommentModule, CommunityServer.Galleries" /> -->
			<!-- <add name = "MaxPictureSize" type = "CommunityServer.Galleries.Components.MaxPictureSizeModule, CommunityServer.Galleries" maxWidth="1024" maxHeight="768" quality="90" /> -->
		</CSModules>

	</CommunityServer>
